const fetch = require('node-fetch');
const config = require('../config');
const { cmd } = require('../command');

cmd({
    pattern: "repo",
    alias: ["sc", "script", "info"],
    desc: "R√©cup√©rer les informations du d√©p√¥t GitHub",
    react: "üìÇ",
    category: "info",
    filename: __filename,
},
async (conn, mek, m, { from, reply }) => {
    const githubRepoURL = 'https://github.com/DARKMAN226/DARK-BOY';

    try {
        const [, username, repoName] = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);
        const response = await fetch(`https://api.github.com/repos/${username}/${repoName}`);

        if (!response.ok) throw new Error(`Erreur API GitHub : ${response.status}`);
        const repoData = await response.json();

        // Styles ASCII vari√©s pour l'affichage

        const style1 = `‚ï≠‚îÄ‚îÄ‚îÄ„Äé ${config.BOT_NAME} D√âP√îT „Äè‚îÄ‚îÄ‚îÄ‚≥π
‚îÇ
‚îÇ üì¶ *D√©p√¥t* : ${repoData.name}
‚îÇ üëë *Propri√©taire* : ${repoData.owner.login}
‚îÇ ‚≠ê *√âtoiles* : ${repoData.stargazers_count}
‚îÇ ‚ëÇ *Forks* : ${repoData.forks_count}
‚îÇ üîó *URL* : ${repoData.html_url}
‚îÇ
‚îÇ üìù *Description* :
‚îÇ ${repoData.description || 'Aucune description'}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≥π
> ${config.DESCRIPTION}`;

        const style2 = `‚Ä¢‚Äî‚Äî[ INFO GITHUB ]‚Äî‚Äî‚Ä¢
‚îÇ
‚îú‚îÄ üè∑Ô∏è ${repoData.name}
‚îú‚îÄ üë§ ${repoData.owner.login}
‚îú‚îÄ ‚ú® ${repoData.stargazers_count} √©toiles
‚îú‚îÄ ‚ëÇ ${repoData.forks_count} forks
‚îÇ
‚Ä¢‚Äî‚Äî[ ${config.BOT_NAME} ]‚Äî‚Äî‚Ä¢
> ${config.DESCRIPTION}`;

        const style3 = `‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ INFOS D√âP√îT ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ

‚ô¢ *Projet* : ${repoData.name}
‚ô¢ *Auteur* : ${repoData.owner.login}
‚ô¢ *√âtoiles* : ${repoData.stargazers_count} ‚ú®
‚ô¢ *Forks* : ${repoData.forks_count} ‚ëÇ
‚ô¢ *Mise √† jour* : ${new Date(repoData.updated_at).toLocaleDateString()}

üîó ${repoData.html_url}

> ${config.DESCRIPTION}`;

        const style4 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  ‚ö° ${config.BOT_NAME} D√âP√îT  ‚ö°  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚Ä¢ Nom : ${repoData.name}
‚îÇ ‚Ä¢ Propri√©taire : ${repoData.owner.login}
‚îÇ ‚Ä¢ √âtoiles : ${repoData.stargazers_count}
‚îÇ ‚Ä¢ Forks : ${repoData.forks_count}
‚îÇ ‚Ä¢ URL : ${repoData.html_url}
‚îÇ ‚Ä¢ Description : ${repoData.description || 'Aucune'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
> ${config.DESCRIPTION}`;

        const style5 = `‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ INFOS D√âP√îT ‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

üè∑Ô∏è  *${repoData.name}*
üë®‚Äçüíª  ${repoData.owner.login}

‚≠ê ${repoData.stargazers_count}  ‚ëÇ ${repoData.forks_count}
üîó ${repoData.html_url}

üìú ${repoData.description || 'Aucune description'}

> ${config.DESCRIPTION}`;

        const style6 = `‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   ${config.BOT_NAME} D√âP√îT    ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë > NOM : ${repoData.name}
‚ïë > PROPRI√âTAIRE : ${repoData.owner.login}
‚ïë > √âTOILES : ${repoData.stargazers_count}
‚ïë > FORKS : ${repoData.forks_count}
‚ïë > URL : ${repoData.html_url}
‚ïë > DESC : ${repoData.description || 'Aucune'}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
> ${config.DESCRIPTION}`;

        const style7 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üìÇ  D√âP√îT  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îÇ
‚îÇ *Projet* : ${repoData.name}
‚îÇ *Auteur* : ${repoData.owner.login}
‚îÇ
‚îÇ ‚ú® ${repoData.stargazers_count} √©toiles
‚îÇ ‚ëÇ ${repoData.forks_count} forks
‚îÇ
‚îÇ üîó ${repoData.html_url}
‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üìù  DESC  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
${repoData.description || 'Aucune description'}

> ${config.DESCRIPTION}`;

        const style8 = `‚ú¶ ${config.BOT_NAME} D√©p√¥t GitHub ‚ú¶

üìå *${repoData.name}*
üë§ @${repoData.owner.login}

‚≠ê ${repoData.stargazers_count} √©toiles | ‚ëÇ ${repoData.forks_count} forks
üîÑ Derni√®re mise √† jour : ${new Date(repoData.updated_at).toLocaleDateString()}

üîó GitHub : ${repoData.html_url}

${repoData.description || 'Pas de description disponible'}

> ${config.DESCRIPTION}`;

        const style9 = `‚ïî‚ô´‚ïêüéß‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
   ${config.BOT_NAME} D√âP√îT
‚ïö‚ô´‚ïêüéß‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢
 ‚úß *Nom* : ${repoData.name}
 ‚úß *Propri√©taire* : ${repoData.owner.login}
 ‚úß *√âtoiles* : ${repoData.stargazers_count}
 ‚úß *Forks* : ${repoData.forks_count}
‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢

üîó ${repoData.html_url}

${repoData.description || 'Aucune description'}

> ${config.DESCRIPTION}`;

        const style10 = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ  RAPPORT DU D√âP√îT  ‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚óà Projet : ${repoData.name}
‚óà Mainteneur : ${repoData.owner.login}
‚óà Popularit√© : ‚òÖ ${repoData.stargazers_count} | ‚ëÇ ${repoData.forks_count}
‚óà Derni√®re mise √† jour : ${new Date(repoData.updated_at).toLocaleDateString()}
‚óà URL : ${repoData.html_url}

Description :
${repoData.description || 'Aucune description fournie'}

> ${config.DESCRIPTION}`;

        const styles = [style1, style2, style3, style4, style5, style6, style7, style8, style9, style10];
        const selectedStyle = styles[Math.floor(Math.random() * styles.length)];

        await conn.sendMessage(from, {
            image: { url: config.MENU_IMAGE_URL || 'https://files.catbox.moe/u4g4te.png' },
            caption: selectedStyle,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363422353392657@newsletter',
                    newsletterName: config.OWNER_NAME || 'DARK-DEVüç∑',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

        // Envoi d'un audio ptt de notification
        await conn.sendMessage(from, {
            audio: { url: 'https://files.catbox.moe/lgnhqx.mp3' },
            mimetype: 'audio/mp4',
            ptt: true,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true
            }
        }, { quoted: mek });

    } catch (error) {
        console.error("Erreur commande repo :", error);
        reply(`‚ùå Erreur : ${error.message}`);
    }
});
