const { cmd } = require("../command");

cmd({
  pattern: "vv",
  alias: ["viewonce", "retrive"],
  react: "‚ò¢Ô∏è",
  desc: "Commande propri√©taire ‚Äì r√©cup√®re un message 'vu une fois'",
  category: "owner",
  filename: __filename
}, async (client, message, match, { from, isCreator }) => {
  try {
    // V√©rifie si l'utilisateur est le cr√©ateur du bot
    if (!isCreator) {
      return await client.sendMessage(from, {
        text: "*üìõ Cette commande est r√©serv√©e au propri√©taire.*"
      }, { quoted: message });
    }

    // V√©rifie si un message est cit√©
    if (!match.quoted) {
      return await client.sendMessage(from, {
        text: "*üçÅ Veuillez r√©pondre √† un message 'vu une seule fois' !*"
      }, { quoted: message });
    }

    // T√©l√©charge le contenu du message cit√©
    const buffer = await match.quoted.download();
    const mtype = match.quoted.mtype;
    const options = { quoted: message };

    let messageContent = {};

    switch (mtype) {
      case "imageMessage":
        messageContent = {
          image: buffer,
          caption: match.quoted.text || '',
          mimetype: match.quoted.mimetype || "image/jpeg"
        };
        break;
      case "videoMessage":
        messageContent = {
          video: buffer,
          caption: match.quoted.text || '',
          mimetype: match.quoted.mimetype || "video/mp4"
        };
        break;
      case "audioMessage":
        messageContent = {
          audio: buffer,
          mimetype: "audio/mp4",
          ptt: match.quoted.ptt || false
        };
        break;
      default:
        return await client.sendMessage(from, {
          text: "‚ùå Seuls les messages image, vid√©o ou audio sont pris en charge."
        }, { quoted: message });
    }

    // Renvoyer le contenu dans le chat courant
    await client.sendMessage(from, messageContent, options);

  } catch (error) {
    console.error("Erreur vv :", error);
    await client.sendMessage(from, {
      text: "‚ùå Une erreur est survenue lors de la r√©cup√©ration du message :\n" + error.message
    }, { quoted: message });
  }
});
